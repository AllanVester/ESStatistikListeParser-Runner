name: Runner

on:
  workflow_dispatch:
    inputs:
      filename-no-suffix:
        description: 'ESStatistikListeModtag Filename (No Suffix)'
        required: true
        type: string
      discord-upload-limit:
        description: 'Discord Upload Limit (In MiB)'
        required: true
        type: string
      github-upload-limit:
        description: 'GitHub Upload Limit (In MiB)'
        required: true
        type: string
      worker-count:
        description: 'MySQL - Worker Count'
        required: true
        type: string
      start-count:
        description: 'MySQL - Start Count'
        required: true
        type: string
      step-count:
        description: 'MySQL - Step Count'
        required: true
        type: string
      runner-number:
        description: 'MySQL - Runner Number State'
        required: true
        type: string

jobs:
  download-esstatistiklistemodtag-zip-file:
    name: Download Latest ESStatistikListeModtag ZIP-File
    runs-on: ubuntu-latest
    steps:
      - name: Display runner information
        run: |
          echo "cpu-core:       $(nproc --all)"
          echo "cpu-model:      $(grep 'model name' /proc/cpuinfo | head -1 | cut -d: -f2- | sed 's/^[[:space:]]*//')"
          echo "hostname:       $(hostname)"
          echo "kernel-release: $(uname -r)"
          echo "kernel-version: $(uname -v)"
          echo "name:           $(grep '^NAME=' /etc/os-release | head -1 | cut -d= -f2- | tr -d '\"')"
          echo "platform:       $(uname -s)"
          echo "release:        $(grep '^VERSION_ID=' /etc/os-release | head -1 | cut -d= -f2- | tr -d '\"')"
          echo "total-memory:   $(grep MemTotal /proc/meminfo | awk '{print $2 * 1024}')"
          
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v5
        with:
          remove-haskell: "true"
          remove-codeql: "true"
          remove-swapfile: "true"
          
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository_owner }}/ESStatistikListeParser-GitHub"
          ref: "main"
          path: "${{ github.workspace }}/"
          sparse-checkout: |
            /Branch-GitHub.py
            /ESStatistikListeModtag-GitHub.py
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Create ESStatistikListeModtag repository and set workflow permissions
        uses: actions/github-script@v6
        with:
          script: |
            const repoName = `${{ inputs.filename-no-suffix }}`;

            const payload = {
              name: repoName,
              private: true,
              visibility: "private",
              has_issues: false,
              has_projects: false,
              has_wiki: false,
              has_discussions: false,
              has_downloads: true,
              is_template: false,
              auto_init: true,
              allow_squash_merge: true,
              allow_merge_commit: false,
              allow_rebase_merge: false,
              allow_auto_merge: true,
              delete_branch_on_merge: true,
              use_squash_pr_title_as_default: true,
              squash_merge_commit_title: "PR_TITLE",
              squash_merge_commit_message: "BLANK"
            };
      
            try {
              const response = await github.rest.repos.createForAuthenticatedUser(payload);
              core.info(`Created ${response.data.name}`);
            } catch (err) {
              if (err.status === 422 && err.message.includes('name already exists')) {
                core.info(`Repository ${repoName} already exists, skipping creation.`);
              } else {
                throw err;
              }
            }

            try {
              await github.request(
                'PUT /repos/{owner}/{repo}/actions/permissions/workflow',
                {
                  owner: context.repo.owner,
                  repo: repoName,
                  default_workflow_permissions: 'write',
                  can_approve_pull_request_reviews: true
                }
              );
              core.info(`Workflow permissions set for ${repoName}`);
            } catch (err) {
              throw err;
            }
          github-token: "${{ secrets.PAT }}"

      - name: Checkout ESStatistikListeModtag repository
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository_owner }}/${{ inputs.filename-no-suffix }}"
          ref: "main"
          path: "${{ github.workspace }}/temp/"
          sparse-checkout: |
            !/*
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Set up Git
        working-directory: "${{ github.workspace }}/temp/"
        run: |
          gh auth login --with-token <<< "${{ secrets.PAT }}"

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global http.postBuffer 104857600
          
          if git ls-remote --exit-code --heads origin ${{ inputs.filename-no-suffix }}.zip; then
              echo "Branch '${{ inputs.filename-no-suffix }}.zip' already exists, deleting and recreating..."
              
              if git show-ref --verify --quiet refs/heads/${{ inputs.filename-no-suffix }}.zip; then
                  git branch -D ${{ inputs.filename-no-suffix }}.zip
              fi
              git push origin --delete ${{ inputs.filename-no-suffix }}.zip
              git checkout -b ${{ inputs.filename-no-suffix }}.zip
          else
              echo "Branch '${{ inputs.filename-no-suffix }}.zip' does not exist, creating..."
              
              git checkout -b ${{ inputs.filename-no-suffix }}.zip
          fi

          git push -u origin ${{ inputs.filename-no-suffix }}.zip

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          pip install pymongo discord-webhook

      - name: Download ESStatistikListeModtag ZIP-file
        run: |
          mv ${{ github.workspace }}/ESStatistikListeModtag-GitHub.py ${{ github.workspace }}/temp/ESStatistikListeModtag-GitHub.py
          
          python ${{ github.workspace }}/temp/ESStatistikListeModtag-GitHub.py
        env:
          FILENAME: "${{ inputs.filename-no-suffix }}.zip"
          FILEPATH: "${{ github.workspace }}/temp/"

      - name: Upload ESStatistikListeModtag ZIP-file to GitHub main-branch
        working-directory: "${{ github.workspace }}/temp/"
        run: |
          mv ${{ github.workspace }}/Branch-GitHub.py ${{ github.workspace }}/temp/Branch-GitHub.py
          
          python ${{ github.workspace }}/temp/Branch-GitHub.py main
        env:
          FILENAME: "${{ inputs.filename-no-suffix }}.zip"
          FILENAME_NO_SUFFIX: "${{ inputs.filename-no-suffix }}"
          FILEPATH: "${{ github.workspace }}/temp/"
          BRANCHNAME: "${{ inputs.filename-no-suffix }}.zip"
          GITHUB_UPLOAD_LIMIT: "${{ inputs.github-upload-limit }}"

      - name: Set up ESStatistikListeModtag repository branches
        working-directory: "${{ github.workspace }}/temp/"
        run: |
          git switch --orphan mongodb
          git commit --allow-empty -m "Created MongoDB branch"
          git push origin mongodb

          git switch --orphan mysql
          git commit --allow-empty -m "Created MySQL branch"
          git push origin mysql

          git switch --orphan kidvin
          git commit --allow-empty -m "Created KidVin branch"
          git push origin kidvin
          
          git switch --orphan kid
          git commit --allow-empty -m "Created Kid branch"
          git push origin kid

          git switch --orphan vin
          git commit --allow-empty -m "Created Vin branch"
          git push origin vin

  check-rows:
    name: Go Row Check
    needs: download-esstatistiklistemodtag-zip-file
    runs-on: ubuntu-latest
    steps:
      - name: Display runner information
        run: |
          echo "cpu-core:       $(nproc --all)"
          echo "cpu-model:      $(grep 'model name' /proc/cpuinfo | head -1 | cut -d: -f2- | sed 's/^[[:space:]]*//')"
          echo "hostname:       $(hostname)"
          echo "kernel-release: $(uname -r)"
          echo "kernel-version: $(uname -v)"
          echo "name:           $(grep '^NAME=' /etc/os-release | head -1 | cut -d= -f2- | tr -d '\"')"
          echo "platform:       $(uname -s)"
          echo "release:        $(grep '^VERSION_ID=' /etc/os-release | head -1 | cut -d= -f2- | tr -d '\"')"
          echo "total-memory:   $(grep MemTotal /proc/meminfo | awk '{print $2 * 1024}')"
          
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v5
        with:
          remove-haskell: "true"
          remove-codeql: "true"
          remove-swapfile: "true"
          
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository_owner }}/ESStatistikListeParser-GitHub"
          ref: "main"
          path: "${{ github.workspace }}/"
          sparse-checkout: |
            /go.mod
            /go.sum
            /CheckRows-GitHub.go
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Checkout ESStatistikListeModtag repository
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository_owner }}/${{ inputs.filename-no-suffix }}"
          ref: "main"
          path: "${{ github.workspace }}/temp/"
          sparse-checkout: |
            /ESStatistikListeModtag
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Stitch ESStatistikListeModtag back together
        run: |
          cat ${{ github.workspace }}/temp/ESStatistikListeModtag/*.part* > "${{ github.workspace }}/${{ inputs.filename-no-suffix }}.zip"
          file "${{ github.workspace }}/${{ inputs.filename-no-suffix }}.zip"
          
          rm -rf ${{ github.workspace }}/temp/
          
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Install Go dependencies
        run: |
          go mod tidy

      - name: Run Check-Rows Go script
        run: |
          go run ${{ github.workspace }}/CheckRows-GitHub.go

  upload-zip-to-discord:
    name: Upload Latest ESStatistikListeModtag File to Discord
    needs: download-esstatistiklistemodtag-zip-file
    runs-on: ubuntu-latest
    steps:
      - name: Display runner information
        run: |
          echo "cpu-core:       $(nproc --all)"
          echo "cpu-model:      $(grep 'model name' /proc/cpuinfo | head -1 | cut -d: -f2- | sed 's/^[[:space:]]*//')"
          echo "hostname:       $(hostname)"
          echo "kernel-release: $(uname -r)"
          echo "kernel-version: $(uname -v)"
          echo "name:           $(grep '^NAME=' /etc/os-release | head -1 | cut -d= -f2- | tr -d '\"')"
          echo "platform:       $(uname -s)"
          echo "release:        $(grep '^VERSION_ID=' /etc/os-release | head -1 | cut -d= -f2- | tr -d '\"')"
          echo "total-memory:   $(grep MemTotal /proc/meminfo | awk '{print $2 * 1024}')"
          
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v5
        with:
          remove-haskell: "true"
          remove-codeql: "true"
          remove-swapfile: "true"
          
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository_owner }}/ESStatistikListeParser-GitHub"
          ref: "main"
          path: "${{ github.workspace }}/"
          sparse-checkout: |
            /UploadToDiscord-GitHub.py
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Checkout ESStatistikListeModtag repository
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository_owner }}/${{ inputs.filename-no-suffix }}"
          ref: "main"
          path: "${{ github.workspace }}/temp/"
          sparse-checkout: |
            /ESStatistikListeModtag
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Stitch ESStatistikListeModtag back together
        run: |
          cat ${{ github.workspace }}/temp/ESStatistikListeModtag/*.part* > "${{ github.workspace }}/${{ inputs.filename-no-suffix }}.zip"
          file "${{ github.workspace }}/${{ inputs.filename-no-suffix }}.zip"
          
          rm -rf ${{ github.workspace }}/temp/

      - name: Archive ZIP-file
        run: |
          mkdir -p ${{ github.workspace }}/zip
          zip -j -r -s ${{ inputs.discord-upload-limit }}m ${{ github.workspace }}/zip/${{ inputs.filename-no-suffix }}.zip ${{ github.workspace }}/${{ inputs.filename-no-suffix }}.zip

      - name: Split ZIP-file
        run: |
          mkdir -p ${{ github.workspace }}/split
          split -d -b ${{ inputs.discord-upload-limit }}m ${{ github.workspace }}/${{ inputs.filename-no-suffix }}.zip ${{ github.workspace }}/split/${{ inputs.filename-no-suffix }}.zip.part

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          pip install pymongo discord-webhook

      - name: Upload ZIP-file to Discord
        run: |
          python ${{ github.workspace }}/UploadToDiscord-GitHub.py normal
        env:
          FILENAME: "${{ inputs.filename-no-suffix }}.zip"

  mongodb:
    name: Run MongoDB
    needs: check-rows
    runs-on: ubuntu-latest
    steps:
      - name: Display runner information
        run: |
          echo "cpu-core:       $(nproc --all)"
          echo "cpu-model:      $(grep 'model name' /proc/cpuinfo | head -1 | cut -d: -f2- | sed 's/^[[:space:]]*//')"
          echo "hostname:       $(hostname)"
          echo "kernel-release: $(uname -r)"
          echo "kernel-version: $(uname -v)"
          echo "name:           $(grep '^NAME=' /etc/os-release | head -1 | cut -d= -f2- | tr -d '\"')"
          echo "platform:       $(uname -s)"
          echo "release:        $(grep '^VERSION_ID=' /etc/os-release | head -1 | cut -d= -f2- | tr -d '\"')"
          echo "total-memory:   $(grep MemTotal /proc/meminfo | awk '{print $2 * 1024}')"
          
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v5
        with:
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"
          remove-codeql: "true"
          remove-docker-images: "true"
          remove-large-packages: "true"
          remove-cached-tools: "true"
          remove-swapfile: "true"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository_owner }}/ESStatistikListeParser-GitHub"
          ref: "main"
          path: "${{ github.workspace }}/"
          sparse-checkout: |
            /Branch-GitHub.py
            /go.mod
            /go.sum
            /MongoDB-GitHub.go
            /UploadToDiscord-GitHub.py
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Checkout ESStatistikListeModtag repository
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository_owner }}/${{ inputs.filename-no-suffix }}"
          ref: "main"
          path: "${{ github.workspace }}/temp/"
          sparse-checkout: |
            /ESStatistikListeModtag
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Install MongoDB
        uses: ankane/setup-mongodb@v1
        with:
          mongodb-version: 8.0

      - name: Create MongoDB database
        run: |
          mongosh --host localhost:27017 <<EOF
            db = db.getSiblingDB('bilgaden');
            db.createCollection('dmr');
          EOF

      - name: Stitch ESStatistikListeModtag back together
        run: |
          cat ${{ github.workspace }}/temp/ESStatistikListeModtag/*.part* > "${{ github.workspace }}/${{ inputs.filename-no-suffix }}.zip"
          file "${{ github.workspace }}/${{ inputs.filename-no-suffix }}.zip"
          
          rm -rf ${{ github.workspace }}/temp/

      - name: Checkout ESStatistikListeModtag repository (MongoDB-branch)
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository_owner }}/${{ inputs.filename-no-suffix }}"
          ref: "mongodb"
          path: "${{ github.workspace }}/temp/"
          sparse-checkout: |
            !/*
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Set up Git
        working-directory: "${{ github.workspace }}/temp/"
        run: |
          gh auth login --with-token <<< "${{ secrets.PAT }}"

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global http.postBuffer 104857600
          
          if git ls-remote --exit-code --heads origin ${{ inputs.filename-no-suffix }}.zip-mongodb; then
              echo "Branch '${{ inputs.filename-no-suffix }}.zip-mongodb' already exists, deleting and recreating..."
              
              if git show-ref --verify --quiet refs/heads/${{ inputs.filename-no-suffix }}.zip-mongodb; then
                  git branch -D ${{ inputs.filename-no-suffix }}.zip-mongodb
              fi
              git push origin --delete ${{ inputs.filename-no-suffix }}.zip-mongodb
              git checkout -b ${{ inputs.filename-no-suffix }}.zip-mongodb
          else
              echo "Branch '${{ inputs.filename-no-suffix }}.zip-mongodb' does not exist, creating..."
              
              git checkout -b ${{ inputs.filename-no-suffix }}.zip-mongodb
          fi

          git push -u origin ${{ inputs.filename-no-suffix }}.zip-mongodb

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Install Go dependencies
        run: |
          go mod tidy

      - name: Run MongoDB Go script
        run: |
          go run ${{ github.workspace }}/MongoDB-GitHub.go
          
          rm -f "${{ github.workspace }}/${{ inputs.filename-no-suffix }}.zip"

      - name: Dump the entire database
        run: |
          mongodump \
            --host localhost --port 27017 \
            --db bilgaden \
            --collection=dmr \
            --gzip --out dump
          find ${{ github.workspace }}/dump/bilgaden -type f ! -name 'dmr.bson.gz' -delete
    
      - name: Archive BSON-file
        run: |
          mkdir -p ${{ github.workspace }}/mongodb-zip
          zip -j -r -s ${{ inputs.discord-upload-limit }}m ${{ github.workspace }}/mongodb-zip/${{ inputs.filename-no-suffix }}.bson.gz.zip ${{ github.workspace }}/dump/bilgaden

      - name: Split BSON-file
        run: |
          mkdir -p ${{ github.workspace }}/mongodb-split
          split -d -b ${{ inputs.discord-upload-limit }}m ${{ github.workspace }}/dump/bilgaden/dmr.bson.gz ${{ github.workspace }}/mongodb-split/${{ inputs.filename-no-suffix }}.bson.gz.part

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          pip install pymongo discord-webhook

      - name: Upload BSON-file to GitHub MongoDB-branch
        working-directory: "${{ github.workspace }}/temp/"
        run: |
          mv ${{ github.workspace }}/dump/bilgaden/dmr.bson.gz ${{ github.workspace }}/temp/dmr.bson.gz
          mv ${{ github.workspace }}/Branch-GitHub.py ${{ github.workspace }}/temp/Branch-GitHub.py
          
          python ${{ github.workspace }}/temp/Branch-GitHub.py mongodb
        env:
          FILENAME: "dmr.bson.gz"
          FILENAME_NO_SUFFIX: "${{ inputs.filename-no-suffix }}"
          FILEPATH: "${{ github.workspace }}/temp/"
          BRANCHNAME: "${{ inputs.filename-no-suffix }}.zip-mongodb"
          GITHUB_UPLOAD_LIMIT: "${{ inputs.github-upload-limit }}"

      - name: Upload BSON-file to Discord
        run: |
          python ${{ github.workspace }}/UploadToDiscord-GitHub.py mongodb
        env:
          FILENAME: "${{ inputs.filename-no-suffix }}.bson.gz"

  mysql:
    name: Run MySQL
    needs: check-rows
    runs-on: ubuntu-latest
    steps:
      - name: Display runner information
        run: |
          echo "cpu-core:       $(nproc --all)"
          echo "cpu-model:      $(grep 'model name' /proc/cpuinfo | head -1 | cut -d: -f2- | sed 's/^[[:space:]]*//')"
          echo "hostname:       $(hostname)"
          echo "kernel-release: $(uname -r)"
          echo "kernel-version: $(uname -v)"
          echo "name:           $(grep '^NAME=' /etc/os-release | head -1 | cut -d= -f2- | tr -d '\"')"
          echo "platform:       $(uname -s)"
          echo "release:        $(grep '^VERSION_ID=' /etc/os-release | head -1 | cut -d= -f2- | tr -d '\"')"
          echo "total-memory:   $(grep MemTotal /proc/meminfo | awk '{print $2 * 1024}')"

      - name: Set environment variables
        run: |
          echo "PREV_RUNNER=$(( ${{ inputs.runner-number }} - 1 ))" >> $GITHUB_ENV
          echo "NEXT_RUNNER=$(( ${{ inputs.runner-number }} + 1 ))" >> $GITHUB_ENV
          echo "NEXT_START_COUNT=$(( ${{ inputs.start-count }} + ${{ inputs.step-count }} ))" >> $GITHUB_ENV
          echo "NEXT_STEP_COUNT=$(( ${{ inputs.step-count }} - 500000 ))" >> $GITHUB_ENV
          echo "XML_PARSE_COMPLETE=false" >> $GITHUB_ENV
          
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v5
        with:
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"
          remove-codeql: "true"
          remove-docker-images: "true"
          remove-cached-tools: "true"
          remove-swapfile: "true"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository_owner }}/ESStatistikListeParser-GitHub"
          ref: "main"
          path: "${{ github.workspace }}/"
          sparse-checkout: |
            /Bilgaden.sql
            /Branch-GitHub.py
            /go.mod
            /go.sum
            /MySQL-GitHub.go
            /UploadToDiscord-GitHub.py
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Checkout ESStatistikListeModtag repository
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository_owner }}/${{ inputs.filename-no-suffix }}"
          ref: "main"
          path: "${{ github.workspace }}/temp/"
          sparse-checkout: |
            /ESStatistikListeModtag
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Set up MySQL
        uses: ankane/setup-mariadb@v1
        
      - name: Import schema into MySQL
        run: |
          /usr/bin/mariadb < "Bilgaden.sql"

      - name: Tune MySQL buffer pool size
        run: |
          /usr/bin/mariadb -e "SET GLOBAL innodb_buffer_pool_size = 14 * 1024 * 1024 * 1024;"

      - name: Stitch ESStatistikListeModtag back together
        run: |
          cat ${{ github.workspace }}/temp/ESStatistikListeModtag/*.part* > "${{ github.workspace }}/${{ inputs.filename-no-suffix }}.zip"
          file "${{ github.workspace }}/${{ inputs.filename-no-suffix }}.zip"
          
          rm -rf ${{ github.workspace }}/temp/

      - name: Checkout ESStatistikListeModtag repository (MySQL-branch)
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository_owner }}/${{ inputs.filename-no-suffix }}"
          ref: "mysql"
          path: "${{ github.workspace }}/temp/"
          sparse-checkout: |
            !/*
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Set up Git for temporary files
        working-directory: "${{ github.workspace }}/temp/"
        run: |
          gh auth login --with-token <<< "${{ secrets.PAT }}"

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global http.postBuffer 104857600
          
          if git ls-remote --exit-code --heads origin mysql-temp-${{ inputs.runner-number }}; then
              echo "Branch 'mysql-temp-${{ inputs.runner-number }}' already exists, deleting and recreating..."
              
              if git show-ref --verify --quiet refs/heads/mysql-temp-${{ inputs.runner-number }}; then
                  git branch -D mysql-temp-${{ inputs.runner-number }}
              fi
              git push origin --delete mysql-temp-${{ inputs.runner-number }}
              git checkout -b mysql-temp-${{ inputs.runner-number }}
          else
              echo "Branch 'mysql-temp-${{ inputs.runner-number }}' does not exist, creating..."
              
              git checkout -b mysql-temp-${{ inputs.runner-number }}
          fi

          git push -u origin mysql-temp-${{ inputs.runner-number }}

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Install Go dependencies
        run: |
          go mod tidy

      - name: Run MySQL Go script
        run: |
          go run ${{ github.workspace }}/MySQL-GitHub.go

          rm -f "${{ github.workspace }}/${{ inputs.filename-no-suffix }}.zip"
        env:
          NUMBER_OF_WORKERS: ${{ inputs.worker-count }}
          START_COUNT: ${{ inputs.start-count }}
          END_COUNT: ${{ env.NEXT_START_COUNT }}

      - name: Dump the entire database
        run: |
          /usr/bin/mariadb-dump --no-create-db --databases bilgaden | gzip > ${{ github.workspace }}/bilgaden.sql.gz
    
      - name: Split SQL-file into temp-directory
        run: |
          split -d -b ${{ inputs.github-upload-limit }}m ${{ github.workspace }}/bilgaden.sql.gz ${{ github.workspace }}/temp/${{ inputs.filename-no-suffix }}.sql.gz.part

      - name: Upload SQL-file to GitHub MySQL-temp-branch
        working-directory: "${{ github.workspace }}/temp/"
        run: |
          git add --sparse .
          git commit -m "Uploaded mysql-temp-${{ inputs.runner-number }}"
          git push

      - name: Trigger next Runner
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'runner-mysql.yml',
              ref: 'main',
              inputs: {
                'filename-no-suffix': '${{ inputs.filename-no-suffix }}',
                'discord-upload-limit': '${{ inputs.discord-upload-limit }}',
                'github-upload-limit': '${{ inputs.github-upload-limit }}',
                'worker-count': '${{ inputs.worker-count }}',
                'start-count': '${{ env.NEXT_START_COUNT }}',
                'step-count': '${{ env.NEXT_STEP_COUNT }}',
                'runner-number': '${{ env.NEXT_RUNNER }}'
              }
            })
          github-token: ${{ secrets.PAT }}

  kidvin:
    name: Run KidVin
    needs: check-rows
    runs-on: ubuntu-latest
    steps:
      - name: Display runner information
        run: |
          echo "cpu-core:       $(nproc --all)"
          echo "cpu-model:      $(grep 'model name' /proc/cpuinfo | head -1 | cut -d: -f2- | sed 's/^[[:space:]]*//')"
          echo "hostname:       $(hostname)"
          echo "kernel-release: $(uname -r)"
          echo "kernel-version: $(uname -v)"
          echo "name:           $(grep '^NAME=' /etc/os-release | head -1 | cut -d= -f2- | tr -d '\"')"
          echo "platform:       $(uname -s)"
          echo "release:        $(grep '^VERSION_ID=' /etc/os-release | head -1 | cut -d= -f2- | tr -d '\"')"
          echo "total-memory:   $(grep MemTotal /proc/meminfo | awk '{print $2 * 1024}')"
          
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v5
        with:
          remove-haskell: "true"
          remove-codeql: "true"
          remove-swapfile: "true"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: "AllanVester/ESStatistikListeParser-GitHub"
          ref: "main"
          path: "${{ github.workspace }}/"
          sparse-checkout: |
            /Branch-GitHub.py
            /go.mod
            /go.sum
            /KidVin-GitHub.go
            /UploadToDiscord-GitHub.py
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Checkout ESStatistikListeModtag repository
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository_owner }}/${{ inputs.filename-no-suffix }}"
          ref: "main"
          path: "${{ github.workspace }}/temp/"
          sparse-checkout: |
            /ESStatistikListeModtag
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Stitch ESStatistikListeModtag back together
        run: |
          cat ${{ github.workspace }}/temp/ESStatistikListeModtag/*.part* > "${{ github.workspace }}/${{ inputs.filename-no-suffix }}.zip"
          file "${{ github.workspace }}/${{ inputs.filename-no-suffix }}.zip"
          
          rm -rf ${{ github.workspace }}/temp/

      - name: Checkout ESStatistikListeModtag repository (KidVin-branch)
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository_owner }}/${{ inputs.filename-no-suffix }}"
          ref: "kidvin"
          path: "${{ github.workspace }}/temp/"
          sparse-checkout: |
            /ESStatistikListeModtag
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Set up Git
        working-directory: "${{ github.workspace }}/temp/"
        run: |
          gh auth login --with-token <<< "${{ secrets.PAT }}"

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global http.postBuffer 104857600
          
          if git ls-remote --exit-code --heads origin ${{ inputs.filename-no-suffix }}.zip-kidvin; then
              echo "Branch already exists, deleting and recreating..."
              
              if git show-ref --verify --quiet refs/heads/${{ inputs.filename-no-suffix }}.zip-kidvin; then
                  git branch -D ${{ inputs.filename-no-suffix }}.zip-kidvin
              fi
              git push origin --delete ${{ inputs.filename-no-suffix }}.zip-kidvin
              git checkout -b ${{ inputs.filename-no-suffix }}.zip-kidvin
          else
              echo "Branch does not exist, creating..."
              
              git checkout -b ${{ inputs.filename-no-suffix }}.zip-kidvin
          fi

          git push -u origin ${{ inputs.filename-no-suffix }}.zip-kidvin

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Install Go dependencies
        run: |
          go mod tidy

      - name: Run KidVin Go script
        run: |
          go run ${{ github.workspace }}/KidVin-GitHub.go

      - name: Archive JSON-file
        run: |
          mkdir -p ${{ github.workspace }}/kidvin-zip
          zip -j -r -s ${{ inputs.discord-upload-limit }}m ${{ github.workspace }}/kidvin-zip/${{ inputs.filename-no-suffix }}.json.zip ${{ github.workspace }}/kidvin.json

      - name: Split JSON-file
        run: |
          mkdir -p ${{ github.workspace }}/kidvin-split
          split -d -b ${{ inputs.discord-upload-limit }}m ${{ github.workspace }}/kidvin.json ${{ github.workspace }}/kidvin-split/${{ inputs.filename-no-suffix }}.json.part

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          pip install pymongo discord-webhook

      - name: Upload JSON-file to GitHub KidVin-branch
        working-directory: "${{ github.workspace }}/temp/"
        run: |
          mv ${{ github.workspace }}/kidvin.json ${{ github.workspace }}/temp/kidvin.json
          mv ${{ github.workspace }}/Branch-GitHub.py ${{ github.workspace }}/temp/Branch-GitHub.py
          
          python ${{ github.workspace }}/temp/Branch-GitHub.py kidvin
        env:
          FILENAME: "kidvin.json"
          FILENAME_NO_SUFFIX: "${{ inputs.filename-no-suffix }}"
          FILEPATH: "${{ github.workspace }}/temp/"
          BRANCHNAME: "${{ inputs.filename-no-suffix }}.zip-kidvin"
          GITHUB_UPLOAD_LIMIT: "${{ inputs.github-upload-limit }}"

      - name: Upload JSON-file to Discord
        run: |
          python ${{ github.workspace }}/UploadToDiscord-GitHub.py kidvin
        env:
          FILENAME: "${{ inputs.filename-no-suffix }}.json"

  kid:
    name: Run Kid
    needs: check-rows
    runs-on: ubuntu-latest
    steps:
      - name: Display runner information
        run: |
          echo "cpu-core:       $(nproc --all)"
          echo "cpu-model:      $(grep 'model name' /proc/cpuinfo | head -1 | cut -d: -f2- | sed 's/^[[:space:]]*//')"
          echo "hostname:       $(hostname)"
          echo "kernel-release: $(uname -r)"
          echo "kernel-version: $(uname -v)"
          echo "name:           $(grep '^NAME=' /etc/os-release | head -1 | cut -d= -f2- | tr -d '\"')"
          echo "platform:       $(uname -s)"
          echo "release:        $(grep '^VERSION_ID=' /etc/os-release | head -1 | cut -d= -f2- | tr -d '\"')"
          echo "total-memory:   $(grep MemTotal /proc/meminfo | awk '{print $2 * 1024}')"
          
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v5
        with:
          remove-haskell: "true"
          remove-codeql: "true"
          remove-swapfile: "true"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: "AllanVester/ESStatistikListeParser-GitHub"
          ref: "main"
          path: "${{ github.workspace }}/"
          sparse-checkout: |
            /Branch-GitHub.py
            /go.mod
            /go.sum
            /Kid-GitHub.go
            /UploadToDiscord-GitHub.py
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Checkout ESStatistikListeModtag repository
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository_owner }}/${{ inputs.filename-no-suffix }}"
          ref: "main"
          path: "${{ github.workspace }}/temp/"
          sparse-checkout: |
            /ESStatistikListeModtag
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Stitch ESStatistikListeModtag back together
        run: |
          cat ${{ github.workspace }}/temp/ESStatistikListeModtag/*.part* > "${{ github.workspace }}/${{ inputs.filename-no-suffix }}.zip"
          file "${{ github.workspace }}/${{ inputs.filename-no-suffix }}.zip"
          
          rm -rf ${{ github.workspace }}/temp/

      - name: Checkout ESStatistikListeModtag repository (Kid-branch)
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository_owner }}/${{ inputs.filename-no-suffix }}"
          ref: "kid"
          path: "${{ github.workspace }}/temp/"
          sparse-checkout: |
            /ESStatistikListeModtag
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Set up Git
        working-directory: "${{ github.workspace }}/temp/"
        run: |
          gh auth login --with-token <<< "${{ secrets.PAT }}"

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global http.postBuffer 104857600
          
          if git ls-remote --exit-code --heads origin ${{ inputs.filename-no-suffix }}.zip-kid; then
              echo "Branch already exists, deleting and recreating..."
              
              if git show-ref --verify --quiet refs/heads/${{ inputs.filename-no-suffix }}.zip-kid; then
                  git branch -D ${{ inputs.filename-no-suffix }}.zip-kid
              fi
              git push origin --delete ${{ inputs.filename-no-suffix }}.zip-kid
              git checkout -b ${{ inputs.filename-no-suffix }}.zip-kid
          else
              echo "Branch does not exist, creating..."
              
              git checkout -b ${{ inputs.filename-no-suffix }}.zip-kid
          fi

          git push -u origin ${{ inputs.filename-no-suffix }}.zip-kid

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Install Go dependencies
        run: |
          go mod tidy

      - name: Run Kid Go script
        run: |
          go run ${{ github.workspace }}/Kid-GitHub.go

      - name: Archive JSON-file
        run: |
          mkdir -p ${{ github.workspace }}/kid-zip
          zip -j -r -s ${{ inputs.discord-upload-limit }}m ${{ github.workspace }}/kid-zip/${{ inputs.filename-no-suffix }}.json.zip ${{ github.workspace }}/kid.json

      - name: Split JSON-file
        run: |
          mkdir -p ${{ github.workspace }}/kid-split
          split -d -b ${{ inputs.discord-upload-limit }}m ${{ github.workspace }}/kid.json ${{ github.workspace }}/kid-split/${{ inputs.filename-no-suffix }}.json.part

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          pip install pymongo discord-webhook

      - name: Upload JSON-file to GitHub Kid-branch
        working-directory: "${{ github.workspace }}/temp/"
        run: |
          mv ${{ github.workspace }}/kid.json ${{ github.workspace }}/temp/kid.json
          mv ${{ github.workspace }}/Branch-GitHub.py ${{ github.workspace }}/temp/Branch-GitHub.py
          
          python ${{ github.workspace }}/temp/Branch-GitHub.py kid
        env:
          FILENAME: "kid.json"
          FILENAME_NO_SUFFIX: "${{ inputs.filename-no-suffix }}"
          FILEPATH: "${{ github.workspace }}/temp/"
          BRANCHNAME: "${{ inputs.filename-no-suffix }}.zip-kid"
          GITHUB_UPLOAD_LIMIT: "${{ inputs.github-upload-limit }}"

      - name: Upload JSON-file to Discord
        run: |
          python ${{ github.workspace }}/UploadToDiscord-GitHub.py kid
        env:
          FILENAME: "${{ inputs.filename-no-suffix }}.json"

  vin:
    name: Run Vin
    needs: check-rows
    runs-on: ubuntu-latest
    steps:
      - name: Display runner information
        run: |
          echo "cpu-core:       $(nproc --all)"
          echo "cpu-model:      $(grep 'model name' /proc/cpuinfo | head -1 | cut -d: -f2- | sed 's/^[[:space:]]*//')"
          echo "hostname:       $(hostname)"
          echo "kernel-release: $(uname -r)"
          echo "kernel-version: $(uname -v)"
          echo "name:           $(grep '^NAME=' /etc/os-release | head -1 | cut -d= -f2- | tr -d '\"')"
          echo "platform:       $(uname -s)"
          echo "release:        $(grep '^VERSION_ID=' /etc/os-release | head -1 | cut -d= -f2- | tr -d '\"')"
          echo "total-memory:   $(grep MemTotal /proc/meminfo | awk '{print $2 * 1024}')"
          
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v5
        with:
          remove-haskell: "true"
          remove-codeql: "true"
          remove-swapfile: "true"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: "AllanVester/ESStatistikListeParser-GitHub"
          ref: "main"
          path: "${{ github.workspace }}/"
          sparse-checkout: |
            /Branch-GitHub.py
            /go.mod
            /go.sum
            /Vin-GitHub.go
            /UploadToDiscord-GitHub.py
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Checkout ESStatistikListeModtag repository
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository_owner }}/${{ inputs.filename-no-suffix }}"
          ref: "main"
          path: "${{ github.workspace }}/temp/"
          sparse-checkout: |
            /ESStatistikListeModtag
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Stitch ESStatistikListeModtag back together
        run: |
          cat ${{ github.workspace }}/temp/ESStatistikListeModtag/*.part* > "${{ github.workspace }}/${{ inputs.filename-no-suffix }}.zip"
          file "${{ github.workspace }}/${{ inputs.filename-no-suffix }}.zip"
          
          rm -rf ${{ github.workspace }}/temp/

      - name: Checkout ESStatistikListeModtag repository (Vin-branch)
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository_owner }}/${{ inputs.filename-no-suffix }}"
          ref: "vin"
          path: "${{ github.workspace }}/temp/"
          sparse-checkout: |
            /ESStatistikListeModtag
          sparse-checkout-cone-mode: false
          token: "${{ secrets.PAT }}"

      - name: Set up Git
        working-directory: "${{ github.workspace }}/temp/"
        run: |
          gh auth login --with-token <<< "${{ secrets.PAT }}"

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global http.postBuffer 104857600
          
          if git ls-remote --exit-code --heads origin ${{ inputs.filename-no-suffix }}.zip-vin; then
              echo "Branch already exists, deleting and recreating..."
              
              if git show-ref --verify --quiet refs/heads/${{ inputs.filename-no-suffix }}.zip-vin; then
                  git branch -D ${{ inputs.filename-no-suffix }}.zip-vin
              fi
              git push origin --delete ${{ inputs.filename-no-suffix }}.zip-vin
              git checkout -b ${{ inputs.filename-no-suffix }}.zip-vin
          else
              echo "Branch does not exist, creating..."
              
              git checkout -b ${{ inputs.filename-no-suffix }}.zip-vin
          fi

          git push -u origin ${{ inputs.filename-no-suffix }}.zip-vin

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Install Go dependencies
        run: |
          go mod tidy

      - name: Run Vin Go script
        run: |
          go run ${{ github.workspace }}/Vin-GitHub.go

      - name: Archive JSON-file
        run: |
          mkdir -p ${{ github.workspace }}/vin-zip
          zip -j -r -s ${{ inputs.discord-upload-limit }}m ${{ github.workspace }}/vin-zip/${{ inputs.filename-no-suffix }}.json.zip ${{ github.workspace }}/vin.json

      - name: Split JSON-file
        run: |
          mkdir -p ${{ github.workspace }}/vin-split
          split -d -b ${{ inputs.discord-upload-limit }}m ${{ github.workspace }}/vin.json ${{ github.workspace }}/vin-split/${{ inputs.filename-no-suffix }}.json.part

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          pip install pymongo discord-webhook

      - name: Upload JSON-file to GitHub Vin-branch
        working-directory: "${{ github.workspace }}/temp/"
        run: |
          mv ${{ github.workspace }}/vin.json ${{ github.workspace }}/temp/vin.json
          mv ${{ github.workspace }}/Branch-GitHub.py ${{ github.workspace }}/temp/Branch-GitHub.py
          
          python ${{ github.workspace }}/temp/Branch-GitHub.py vin
        env:
          FILENAME: "vin.json"
          FILENAME_NO_SUFFIX: "${{ inputs.filename-no-suffix }}"
          FILEPATH: "${{ github.workspace }}/temp/"
          BRANCHNAME: "${{ inputs.filename-no-suffix }}.zip-vin"
          GITHUB_UPLOAD_LIMIT: "${{ inputs.github-upload-limit }}"

      - name: Upload JSON-file to Discord
        run: |
          python ${{ github.workspace }}/UploadToDiscord-GitHub.py vin
        env:
          FILENAME: "${{ inputs.filename-no-suffix }}.json"
